#! /bin/bash

# test-dircolors — Fine-tune your dircolors for unique colorings of any file type
#
# Author: Micah Elliott http://MicahElliott.com
#
# Tools like ls, tree, zsh color completion, etc make use of dircolors
# settings. This script will show you bunches of files, colored by
# their various extensions (or non-extension files like Makefile).
# Useful for tuning your console color scheme and grouping files by
# type. ls’s -X option is a nice way to group your file listings by
# extension.
#
# The philosophy behind this is that certain types of files are
# similar, and it’s nice to be able to see them as such. For example,
# you may want to color scripts in purple,
# Makefiles/Rakefiles/Gemfiles in yellow, logs in red, archives in
# blue, images in brown, configs in green, generated stuff in dark
# gray, and so on. Choose the categories that suit you (you’ve only
# got a handful of colors to work with) and run this repeatedly until
# you’re happy.
#
# See https://gist.github.com/718567 for an example xterm color
# scheme.
TMPDIR=.
base_files="
tags
core
bug
fix
log
report
Makefile
makefile
README
INSTALL
LICENSE
"

extZIPPED_files="
.zip
.rar
.ace
.lzh
.deb
.rpm
.tgz
.gz
.jar
.zoo
.bz2
"
extVIDEO_files="
.avi
.mpg
.mpeg
.mkv
"
extIMAGE_files="
.bmp
.gif
.jpg
.png
.ppm
.tga
.tif
.xbm
.xpm
"
extAUDIO_files="
.flac
.flc
.ogg
.mp3
"
extPROG_files="
.bash
.c
.cc
.cfg
.class
.conf
.cpp
.csh
.cxx
.h
.hh
.hpp
.inc
.ini
.java
.ksh
.log
.pl
.pm
.py
.sh
.sql
.t
.tcsh
"
extTEXT_files="
.epub
.mobi
.fb2
.html
.txt
.md
.rst
.xml
"
ext_files="
.o
"

tmpdir=$TMPDIR/test-dircolors

echo "I’m now creating a bunch of temp files for you to look at."
rm -rf $tmpdir
mkdir -p $tmpdir || exit 1
cd $tmpdir || exit 1

# Extension files
for e in $extZIPPED_files; do
    touch "ZIPPED-The_quick_brown_fox_jumps_over_the_lazy_dog"$e
    touch "ZIPPED-The_quick_brown_fox_jumps_over_the_lazy_dog"${e^^}
done
for e in $extVIDEO_files; do
    touch "VIDEO-The_quick_brown_fox_jumps_over_the_lazy_dog"$e
    touch "VIDEO-The_quick_brown_fox_jumps_over_the_lazy_dog"${e^^}
done
for e in $extAUDIO_files; do
    touch "AUDIO-The_quick_brown_fox_jumps_over_the_lazy_dog"$e
done
for e in $extIMAGE_files; do
    touch "IMAGE-The_quick_brown_fox_jumps_over_the_lazy_dog"$e
done
for e in $extPROG_files; do
    touch "PROG-The_quick_brown_fox_jumps_over_the_lazy_dog"$e
done
for e in $extTEXT_files; do
    touch "TEXT-The_quick_brown_fox_jumps_over_the_lazy_dog"$e
done
for e in $ext_files; do
    touch "The_quick_brown_fox_jumps_over_the_lazy_dog"$e
done

# Files with no extension/suffix
for b in $base_files; do
    touch $b
done

# An executable
touch ejecutable
chmod +x ejecutable

# link to file
touch linked_file
ln -s linked_file linked_file2

# link to DIR
mkdir DIRECTORY
ln -s DIRECTORY link_to_directory 

# hard link
touch hardlink1
ln hardlink1 hardlink2


# Failed link

touch REAL_FILE
ln -s REAL_FILE FAILED_LINK
rm REAL_FILE

eval $(dircolors -b $DIR_COLORS)

echo
echo "This test is mostly manual, but does create test files for you."
echo "Here’s the test cycle:"
echo
echo " 1. Edit this: $DIR_COLORS"
echo ' 2. Run this to update visible colors: eval $(dircolors -b $DIR_COLORS)'
echo " 3. Do a colored ls on $tmpdir"
echo " 4. Rinse and repeat until you’re happy with scheme."
echo
echo "Do this when you’re done: rm -rf $tmpdir."
