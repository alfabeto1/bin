#!/usr/bin/perl
#==============================================================================#
# POD                                                                          #
#==============================================================================#
# {{{
=encoding utf-8

=head1 NAME

B<new_pm> - Crea un modulo de perl, con todo lo básico.

=head1 SYNOPSIS

=over 4

=item new_pm [-h|--help|-u|-V|--version]

=item new_pm [-c] [-v] [F<PACKAGENAME>] [DESCRIPTION...]

=back

=head1 DESCRIPTION

Crea un modulo de perl con su estructura básica, alguna función de muestra y
documentación.

=head1 OPTIONS

=over 4

=item B<-c>

No genera el fichero del comando, solo lo muestra en pantalla.

=item B<-h>, B<--help>

Muestra la información de ayuda completa.

=item B<-u>

Muestra la información básica de uso (SYNOPSIS).

=item B<-v>

Muestra información detallada durante la ejecución.

=item B<-V>, B<--version>

Muestra la versión del comando y los módulos usados.

=back

=head1 COPYRIGHT & LICENSE

Copyright 2012 el autor.

Todos los derechos reservados.

Puede usar, copiar, modificar, distribuir y vender este software, reconociendo a
su autor original y de acuerdo con los términos de la licencia GPL. (GNU General
Public License).

I<No se dan garantías de ningun tipo. Use este software a su propio riesgo.>

=head1 AUTHOR

Luís M. Arocha Hernández <lah.data@gmail.com>

=cut

# }}}
#==============================================================================#
# ENVIRONMENT                                                                  #
#==============================================================================#
# {{{ Modulos y pragmas
use strict;
use CommonFunc qw/:all/;
use Getopt::Std;

# }}}
# {{{ Constantes (o casi)
our $VERSION = substr q$Revision: 3.1 $, 10;
my $author = 'Luís M. Arocha Hernández';
my $email  = '<lah.data@gmail.com>';

# }}}
# {{{ Variables
my $date   = long_date();
my $year   = year();
my %opt;
my $name;
my $modulo;
my $descrip;

# }}}
# {{{ Parametros
getopts("chuvV",\%opt) or usage("Fallo parámetros");
help()              if $opt{h};
usage()             if $opt{u};
if ($opt{V}){version();exit 1;}
warn "Args=@ARGV\n" if $opt{v};
$modulo  = shift   || 'My::Module';
$descrip = "@ARGV" || 'Module to do something useful';
$modulo  =~ s/^(.)/\U$1/;
$modulo  =~ s/::(.)/::\U$1/;
$name    = $modulo;
$name    =~ s/.*:://;
$name   .= '.pm';

# }}}
# {{{ Leer el template
my $template;
{
    local $/;
    $template = <DATA>;
}

# }}}
#==============================================================================#
# MAIN                                                                         #
#==============================================================================#
# {{{ Procesar el template
$template =~ s/_DATE_/$date/g;
$template =~ s/_YEAR_/$year/g;
$template =~ s/_MODULE_/$modulo/g;
$template =~ s/_AUTHOR_/$author/g;
$template =~ s/_DESCR_/$descrip/g;
$template =~ s/_EMAIL_/$email/g;
$template =~ s/\(\(\(/\{\{\{/g;
$template =~ s/\)\)\)/\}\}\}/g;
$template =~ s/\n--/\n=/g;

# }}}
# {{{ Crear el comando
if ( $opt{c} ) {
    print $template;
} else {
    if ( -e $name ) {
        usage("El fichero $name ya existe\n");
    } else {
        open FILE, ">$name" or die $!;
        print FILE $template;
        close FILE;
        system "chmod +x $name";
        print "Modulo $name ($modulo) creado\n";
    }
}
exit;

# }}}
#==============================================================================#
# DATA                                                                         #
#==============================================================================#
# {{{

__DATA__
package _MODULE_;
# _DESCR_
#==============================================================================#
# ENVIRONMENT                                                                  #
#==============================================================================#
# ((( Modulos y pragmas
use strict;
use warnings;
use diagnostics;
use Exporter;
use vars qw($VERSION @ISA @EXPORT @EXPORT_OK %EXPORT_TAGS);

# )))
# ((( Variables
$VERSION     = substr q$Revision: 3.1 $, 10;
@ISA         = qw(Exporter);
@EXPORT      = ();
@EXPORT_OK   = qw(&func1);
%EXPORT_TAGS = ( DEFAULT => [qw(&func1)],
                 Both    => [qw(&func1 &func2)]);

# )))
#==============================================================================#
# FUNCTIONS                                                                    #
#==============================================================================#
# ((( Inicializate new object
sub new {
    my $class = shift;
    my $arg   = shift;
    if ( ref $arg eq 'HASH' ) {
        $val = $arg->{val} if defined $arg->{val};
    } else {
        die "Missing argument hash";
    }
    bless $this, $class;
    return $this;
}

# )))
# ((( Function to do this and that
sub func1 {
    my $this  = shift;
    my $class = ref($this);
    my ( $parm1, $parm2 ) = @_;
    return $parm1;
}
1;

# )))
#==============================================================================#
# POD                                                                          #
#==============================================================================#
# (((
--encoding utf-8

--head1 NAME

_MODULE_ - _DESCR_

--head1 DESCRIPTION

--head1 SYNOPSIS

    use _MODULE_;
    my $mm = new _MODULE_ ( Arg => 'argval' );
    print $mm->Arg;

--head1 METHODS

--head2 C<new>

The constructor

--over 4

--item Arg

Argument

--back

--head1 CONFIGURATION

Explicación completa del sistema de configuración utilizado por el programa,
incluyendo nombres y localizaciones de los ficheros de configuración y la
sintaxis de los mismos.

--head1 ENVIRONMENT

Explicación de las variables de entorno que se utilizan en el programa o sus
módulos.

--head1 EXIT STATUS

Lists the possible exit status values of a program and the conditions that cause
these values to be returned.

--head1 FILES

Relación exaustiva de los ficheros utilizados por el programa, como ficheros
de configuración, ficheros de arranque, o ficheros sobre los que el programa
opera. Especificar nombre y ruta.

--head1 NOTES

Cualquier otra cosa que no se haya contemplado en los demás
apartados.

--head1 SEE ALSO

L<perlpod|Pod::perlpod>, L<perlpodspec|Pod::perlpodspec>

--head1 BUGS

No hay fallos conocidos en este módulo. Por favor informe de cualquier fallo al
autor.

Parches para mejoras o errores, comentarios y sugerencias serán bienvenidos.

--head1 COPYRIGHT & LICENSE

Copyright _YEAR_ el autor.

Todos los derechos reservados.

Puede usar, copiar, modificar, distribuir y vender este software, reconociendo a
su autor original y de acuerdo con los términos de la licencia GPL. (GNU General
Public License).

I<No se dan garantías de ningun tipo. Use este software a su propio riesgo.>

--head1 AUTHOR

_AUTHOR_ _EMAIL_.

--cut

# }}}
